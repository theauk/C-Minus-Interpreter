Grammar

    0 $accept: program $end

    1 program: typeSpecifier ID LPAREN params RPAREN LCURLY declarationList compoundStmt RCURLY

    2 declarationList: varDeclaration declarationListTail
    3                | ioStmt

    4 declarationListTail: varDeclaration declarationListTail
    5                    | /* empty */

    6 varDeclaration: typeSpecifier ID SEMICOLON
    7               | typeSpecifier ID LSQUARE NUM RSQUARE SEMICOLON

    8 typeSpecifier: INT
    9              | FLOAT
   10              | VOID

   11 params: paramList
   12       | VOID

   13 paramList: param paramListTail

   14 paramListTail: COMMA param paramListTail
   15              | /* empty */

   16 param: typeSpecifier ID
   17      | typeSpecifier ID LSQUARE RSQUARE

   18 compoundStmt: LCURLY statementList RCURLY

   19 statementList: statement statementList
   20              | /* empty */

   21 statement: assignmentStmt
   22          | compoundStmt
   23          | selectionStmt
   24          | iterationStmt
   25          | ioStmt

   26 selectionStmt: IF LPAREN boolExpression RPAREN statement
   27              | IF LPAREN boolExpression RPAREN statement ELSE statement

   28 @1: /* empty */

   29 iterationStmt: WHILE LPAREN boolExpression RPAREN @1 statement

   30 assignmentStmt: ID ASSIGNMENT additiveExpression
   31               | ID LSQUARE additiveExpression RSQUARE ASSIGNMENT additiveExpression

   32 var: ID
   33    | ID LSQUARE additiveExpression RSQUARE

   34 boolExpression: additiveExpression relop additiveExpression

   35 relop: LESS_OR_EQUAL
   36      | LESS_THAN
   37      | GREATER_THAN
   38      | GREATER_OR_EQUAL
   39      | EQUALS
   40      | NOT_EQUALS

   41 additiveExpression: term
   42                   | term addop additiveExpression

   43 term: factor
   44     | factor mulop term

   45 addop: PLUS
   46      | MINUS

   47 mulop: MULTIPLY
   48      | DIVIDE

   49 factor: LPAREN additiveExpression RPAREN
   50       | var
   51       | NUM

   52 ioStmt: WRITE ID ioWriteTail

   53 ioWriteTail: COMMA ID ioWriteTail
   54            | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
ELSE (258) 27
IF (259) 26 27
INT (260) 8
FLOAT (261) 9
VOID (262) 10 12
WHILE (263) 29
PLUS (264) 45
MINUS (265) 46
MULTIPLY (266) 47
DIVIDE (267) 48
EQUALS (268) 39
NOT_EQUALS (269) 40
LESS_THAN (270) 36
LESS_OR_EQUAL (271) 35
GREATER_THAN (272) 37
GREATER_OR_EQUAL (273) 38
ASSIGNMENT (274) 30 31
COMMA (275) 14 53
SEMICOLON (276) 6 7
LPAREN (277) 1 26 27 29 49
RPAREN (278) 1 26 27 29 49
LSQUARE (279) 7 17 31 33
RSQUARE (280) 7 17 31 33
LCURLY (281) 1 18
RCURLY (282) 1 18
ID (283) 1 6 7 16 17 30 31 32 33 52 53
NUM (284) 7 51
WRITE (285) 52
IF_LOWER (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
declarationList (34)
    on left: 2 3, on right: 1
declarationListTail (35)
    on left: 4 5, on right: 2 4
varDeclaration (36)
    on left: 6 7, on right: 2 4
typeSpecifier (37)
    on left: 8 9 10, on right: 1 6 7 16 17
params (38)
    on left: 11 12, on right: 1
paramList (39)
    on left: 13, on right: 11
paramListTail (40)
    on left: 14 15, on right: 13 14
param (41)
    on left: 16 17, on right: 13 14
compoundStmt (42)
    on left: 18, on right: 1 22
statementList (43)
    on left: 19 20, on right: 18 19
statement (44)
    on left: 21 22 23 24 25, on right: 19 26 27 29
selectionStmt (45)
    on left: 26 27, on right: 23
iterationStmt (46)
    on left: 29, on right: 24
@1 (47)
    on left: 28, on right: 29
assignmentStmt (48)
    on left: 30 31, on right: 21
var (49)
    on left: 32 33, on right: 50
boolExpression (50)
    on left: 34, on right: 26 27 29
relop (51)
    on left: 35 36 37 38 39 40, on right: 34
additiveExpression (52)
    on left: 41 42, on right: 30 31 33 34 42 49
term (53)
    on left: 43 44, on right: 41 42 44
addop (54)
    on left: 45 46, on right: 42
mulop (55)
    on left: 47 48, on right: 44
factor (56)
    on left: 49 50 51, on right: 43 44
ioStmt (57)
    on left: 52, on right: 3 25
ioWriteTail (58)
    on left: 53 54, on right: 52 53


state 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    program        go to state 4
    typeSpecifier  go to state 5


state 1

    8 typeSpecifier: INT .

    $default  reduce using rule 8 (typeSpecifier)


state 2

    9 typeSpecifier: FLOAT .

    $default  reduce using rule 9 (typeSpecifier)


state 3

   10 typeSpecifier: VOID .

    $default  reduce using rule 10 (typeSpecifier)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 6


state 5

    1 program: typeSpecifier . ID LPAREN params RPAREN LCURLY declarationList compoundStmt RCURLY

    ID  shift, and go to state 7


state 6

    0 $accept: program $end .

    $default  accept


state 7

    1 program: typeSpecifier ID . LPAREN params RPAREN LCURLY declarationList compoundStmt RCURLY

    LPAREN  shift, and go to state 8


state 8

    1 program: typeSpecifier ID LPAREN . params RPAREN LCURLY declarationList compoundStmt RCURLY

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 9

    typeSpecifier  go to state 10
    params         go to state 11
    paramList      go to state 12
    param          go to state 13


state 9

   10 typeSpecifier: VOID .
   12 params: VOID .

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 10 (typeSpecifier)


state 10

   16 param: typeSpecifier . ID
   17      | typeSpecifier . ID LSQUARE RSQUARE

    ID  shift, and go to state 14


state 11

    1 program: typeSpecifier ID LPAREN params . RPAREN LCURLY declarationList compoundStmt RCURLY

    RPAREN  shift, and go to state 15


state 12

   11 params: paramList .

    $default  reduce using rule 11 (params)


state 13

   13 paramList: param . paramListTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 15 (paramListTail)

    paramListTail  go to state 17


state 14

   16 param: typeSpecifier ID .
   17      | typeSpecifier ID . LSQUARE RSQUARE

    LSQUARE  shift, and go to state 18

    $default  reduce using rule 16 (param)


state 15

    1 program: typeSpecifier ID LPAREN params RPAREN . LCURLY declarationList compoundStmt RCURLY

    LCURLY  shift, and go to state 19


state 16

   14 paramListTail: COMMA . param paramListTail

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    typeSpecifier  go to state 10
    param          go to state 20


state 17

   13 paramList: param paramListTail .

    $default  reduce using rule 13 (paramList)


state 18

   17 param: typeSpecifier ID LSQUARE . RSQUARE

    RSQUARE  shift, and go to state 21


state 19

    1 program: typeSpecifier ID LPAREN params RPAREN LCURLY . declarationList compoundStmt RCURLY

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    WRITE  shift, and go to state 22

    declarationList  go to state 23
    varDeclaration   go to state 24
    typeSpecifier    go to state 25
    ioStmt           go to state 26


state 20

   14 paramListTail: COMMA param . paramListTail

    COMMA  shift, and go to state 16

    $default  reduce using rule 15 (paramListTail)

    paramListTail  go to state 27


state 21

   17 param: typeSpecifier ID LSQUARE RSQUARE .

    $default  reduce using rule 17 (param)


state 22

   52 ioStmt: WRITE . ID ioWriteTail

    ID  shift, and go to state 28


state 23

    1 program: typeSpecifier ID LPAREN params RPAREN LCURLY declarationList . compoundStmt RCURLY

    LCURLY  shift, and go to state 29

    compoundStmt  go to state 30


state 24

    2 declarationList: varDeclaration . declarationListTail

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 5 (declarationListTail)

    declarationListTail  go to state 31
    varDeclaration       go to state 32
    typeSpecifier        go to state 25


state 25

    6 varDeclaration: typeSpecifier . ID SEMICOLON
    7               | typeSpecifier . ID LSQUARE NUM RSQUARE SEMICOLON

    ID  shift, and go to state 33


state 26

    3 declarationList: ioStmt .

    $default  reduce using rule 3 (declarationList)


state 27

   14 paramListTail: COMMA param paramListTail .

    $default  reduce using rule 14 (paramListTail)


state 28

   52 ioStmt: WRITE ID . ioWriteTail

    COMMA  shift, and go to state 34

    $default  reduce using rule 54 (ioWriteTail)

    ioWriteTail  go to state 35


state 29

   18 compoundStmt: LCURLY . statementList RCURLY

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    LCURLY  shift, and go to state 29
    ID      shift, and go to state 38
    WRITE   shift, and go to state 22

    $default  reduce using rule 20 (statementList)

    compoundStmt    go to state 39
    statementList   go to state 40
    statement       go to state 41
    selectionStmt   go to state 42
    iterationStmt   go to state 43
    assignmentStmt  go to state 44
    ioStmt          go to state 45


state 30

    1 program: typeSpecifier ID LPAREN params RPAREN LCURLY declarationList compoundStmt . RCURLY

    RCURLY  shift, and go to state 46


state 31

    2 declarationList: varDeclaration declarationListTail .

    $default  reduce using rule 2 (declarationList)


state 32

    4 declarationListTail: varDeclaration . declarationListTail

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 5 (declarationListTail)

    declarationListTail  go to state 47
    varDeclaration       go to state 32
    typeSpecifier        go to state 25


state 33

    6 varDeclaration: typeSpecifier ID . SEMICOLON
    7               | typeSpecifier ID . LSQUARE NUM RSQUARE SEMICOLON

    SEMICOLON  shift, and go to state 48
    LSQUARE    shift, and go to state 49


state 34

   53 ioWriteTail: COMMA . ID ioWriteTail

    ID  shift, and go to state 50


state 35

   52 ioStmt: WRITE ID ioWriteTail .

    $default  reduce using rule 52 (ioStmt)


state 36

   26 selectionStmt: IF . LPAREN boolExpression RPAREN statement
   27              | IF . LPAREN boolExpression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 51


state 37

   29 iterationStmt: WHILE . LPAREN boolExpression RPAREN @1 statement

    LPAREN  shift, and go to state 52


state 38

   30 assignmentStmt: ID . ASSIGNMENT additiveExpression
   31               | ID . LSQUARE additiveExpression RSQUARE ASSIGNMENT additiveExpression

    ASSIGNMENT  shift, and go to state 53
    LSQUARE     shift, and go to state 54


state 39

   22 statement: compoundStmt .

    $default  reduce using rule 22 (statement)


state 40

   18 compoundStmt: LCURLY statementList . RCURLY

    RCURLY  shift, and go to state 55


state 41

   19 statementList: statement . statementList

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    LCURLY  shift, and go to state 29
    ID      shift, and go to state 38
    WRITE   shift, and go to state 22

    $default  reduce using rule 20 (statementList)

    compoundStmt    go to state 39
    statementList   go to state 56
    statement       go to state 41
    selectionStmt   go to state 42
    iterationStmt   go to state 43
    assignmentStmt  go to state 44
    ioStmt          go to state 45


state 42

   23 statement: selectionStmt .

    $default  reduce using rule 23 (statement)


state 43

   24 statement: iterationStmt .

    $default  reduce using rule 24 (statement)


state 44

   21 statement: assignmentStmt .

    $default  reduce using rule 21 (statement)


state 45

   25 statement: ioStmt .

    $default  reduce using rule 25 (statement)


state 46

    1 program: typeSpecifier ID LPAREN params RPAREN LCURLY declarationList compoundStmt RCURLY .

    $default  reduce using rule 1 (program)


state 47

    4 declarationListTail: varDeclaration declarationListTail .

    $default  reduce using rule 4 (declarationListTail)


state 48

    6 varDeclaration: typeSpecifier ID SEMICOLON .

    $default  reduce using rule 6 (varDeclaration)


state 49

    7 varDeclaration: typeSpecifier ID LSQUARE . NUM RSQUARE SEMICOLON

    NUM  shift, and go to state 57


state 50

   53 ioWriteTail: COMMA ID . ioWriteTail

    COMMA  shift, and go to state 34

    $default  reduce using rule 54 (ioWriteTail)

    ioWriteTail  go to state 58


state 51

   26 selectionStmt: IF LPAREN . boolExpression RPAREN statement
   27              | IF LPAREN . boolExpression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    boolExpression      go to state 63
    additiveExpression  go to state 64
    term                go to state 65
    factor              go to state 66


state 52

   29 iterationStmt: WHILE LPAREN . boolExpression RPAREN @1 statement

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    boolExpression      go to state 67
    additiveExpression  go to state 64
    term                go to state 65
    factor              go to state 66


state 53

   30 assignmentStmt: ID ASSIGNMENT . additiveExpression

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    additiveExpression  go to state 68
    term                go to state 65
    factor              go to state 66


state 54

   31 assignmentStmt: ID LSQUARE . additiveExpression RSQUARE ASSIGNMENT additiveExpression

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    additiveExpression  go to state 69
    term                go to state 65
    factor              go to state 66


state 55

   18 compoundStmt: LCURLY statementList RCURLY .

    $default  reduce using rule 18 (compoundStmt)


state 56

   19 statementList: statement statementList .

    $default  reduce using rule 19 (statementList)


state 57

    7 varDeclaration: typeSpecifier ID LSQUARE NUM . RSQUARE SEMICOLON

    RSQUARE  shift, and go to state 70


state 58

   53 ioWriteTail: COMMA ID ioWriteTail .

    $default  reduce using rule 53 (ioWriteTail)


state 59

   49 factor: LPAREN . additiveExpression RPAREN

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    additiveExpression  go to state 71
    term                go to state 65
    factor              go to state 66


state 60

   32 var: ID .
   33    | ID . LSQUARE additiveExpression RSQUARE

    LSQUARE  shift, and go to state 72

    $default  reduce using rule 32 (var)


state 61

   51 factor: NUM .

    $default  reduce using rule 51 (factor)


state 62

   50 factor: var .

    $default  reduce using rule 50 (factor)


state 63

   26 selectionStmt: IF LPAREN boolExpression . RPAREN statement
   27              | IF LPAREN boolExpression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 73


state 64

   34 boolExpression: additiveExpression . relop additiveExpression

    EQUALS            shift, and go to state 74
    NOT_EQUALS        shift, and go to state 75
    LESS_THAN         shift, and go to state 76
    LESS_OR_EQUAL     shift, and go to state 77
    GREATER_THAN      shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79

    relop  go to state 80


state 65

   41 additiveExpression: term .
   42                   | term . addop additiveExpression

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82

    $default  reduce using rule 41 (additiveExpression)

    addop  go to state 83


state 66

   43 term: factor .
   44     | factor . mulop term

    MULTIPLY  shift, and go to state 84
    DIVIDE    shift, and go to state 85

    $default  reduce using rule 43 (term)

    mulop  go to state 86


state 67

   29 iterationStmt: WHILE LPAREN boolExpression . RPAREN @1 statement

    RPAREN  shift, and go to state 87


state 68

   30 assignmentStmt: ID ASSIGNMENT additiveExpression .

    $default  reduce using rule 30 (assignmentStmt)


state 69

   31 assignmentStmt: ID LSQUARE additiveExpression . RSQUARE ASSIGNMENT additiveExpression

    RSQUARE  shift, and go to state 88


state 70

    7 varDeclaration: typeSpecifier ID LSQUARE NUM RSQUARE . SEMICOLON

    SEMICOLON  shift, and go to state 89


state 71

   49 factor: LPAREN additiveExpression . RPAREN

    RPAREN  shift, and go to state 90


state 72

   33 var: ID LSQUARE . additiveExpression RSQUARE

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    additiveExpression  go to state 91
    term                go to state 65
    factor              go to state 66


state 73

   26 selectionStmt: IF LPAREN boolExpression RPAREN . statement
   27              | IF LPAREN boolExpression RPAREN . statement ELSE statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    LCURLY  shift, and go to state 29
    ID      shift, and go to state 38
    WRITE   shift, and go to state 22

    compoundStmt    go to state 39
    statement       go to state 92
    selectionStmt   go to state 42
    iterationStmt   go to state 43
    assignmentStmt  go to state 44
    ioStmt          go to state 45


state 74

   39 relop: EQUALS .

    $default  reduce using rule 39 (relop)


state 75

   40 relop: NOT_EQUALS .

    $default  reduce using rule 40 (relop)


state 76

   36 relop: LESS_THAN .

    $default  reduce using rule 36 (relop)


state 77

   35 relop: LESS_OR_EQUAL .

    $default  reduce using rule 35 (relop)


state 78

   37 relop: GREATER_THAN .

    $default  reduce using rule 37 (relop)


state 79

   38 relop: GREATER_OR_EQUAL .

    $default  reduce using rule 38 (relop)


state 80

   34 boolExpression: additiveExpression relop . additiveExpression

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    additiveExpression  go to state 93
    term                go to state 65
    factor              go to state 66


state 81

   45 addop: PLUS .

    $default  reduce using rule 45 (addop)


state 82

   46 addop: MINUS .

    $default  reduce using rule 46 (addop)


state 83

   42 additiveExpression: term addop . additiveExpression

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    additiveExpression  go to state 94
    term                go to state 65
    factor              go to state 66


state 84

   47 mulop: MULTIPLY .

    $default  reduce using rule 47 (mulop)


state 85

   48 mulop: DIVIDE .

    $default  reduce using rule 48 (mulop)


state 86

   44 term: factor mulop . term

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var     go to state 62
    term    go to state 95
    factor  go to state 66


state 87

   29 iterationStmt: WHILE LPAREN boolExpression RPAREN . @1 statement

    $default  reduce using rule 28 (@1)

    @1  go to state 96


state 88

   31 assignmentStmt: ID LSQUARE additiveExpression RSQUARE . ASSIGNMENT additiveExpression

    ASSIGNMENT  shift, and go to state 97


state 89

    7 varDeclaration: typeSpecifier ID LSQUARE NUM RSQUARE SEMICOLON .

    $default  reduce using rule 7 (varDeclaration)


state 90

   49 factor: LPAREN additiveExpression RPAREN .

    $default  reduce using rule 49 (factor)


state 91

   33 var: ID LSQUARE additiveExpression . RSQUARE

    RSQUARE  shift, and go to state 98


state 92

   26 selectionStmt: IF LPAREN boolExpression RPAREN statement .
   27              | IF LPAREN boolExpression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 99

    $default  reduce using rule 26 (selectionStmt)


state 93

   34 boolExpression: additiveExpression relop additiveExpression .

    $default  reduce using rule 34 (boolExpression)


state 94

   42 additiveExpression: term addop additiveExpression .

    $default  reduce using rule 42 (additiveExpression)


state 95

   44 term: factor mulop term .

    $default  reduce using rule 44 (term)


state 96

   29 iterationStmt: WHILE LPAREN boolExpression RPAREN @1 . statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    LCURLY  shift, and go to state 29
    ID      shift, and go to state 38
    WRITE   shift, and go to state 22

    compoundStmt    go to state 39
    statement       go to state 100
    selectionStmt   go to state 42
    iterationStmt   go to state 43
    assignmentStmt  go to state 44
    ioStmt          go to state 45


state 97

   31 assignmentStmt: ID LSQUARE additiveExpression RSQUARE ASSIGNMENT . additiveExpression

    LPAREN  shift, and go to state 59
    ID      shift, and go to state 60
    NUM     shift, and go to state 61

    var                 go to state 62
    additiveExpression  go to state 101
    term                go to state 65
    factor              go to state 66


state 98

   33 var: ID LSQUARE additiveExpression RSQUARE .

    $default  reduce using rule 33 (var)


state 99

   27 selectionStmt: IF LPAREN boolExpression RPAREN statement ELSE . statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    LCURLY  shift, and go to state 29
    ID      shift, and go to state 38
    WRITE   shift, and go to state 22

    compoundStmt    go to state 39
    statement       go to state 102
    selectionStmt   go to state 42
    iterationStmt   go to state 43
    assignmentStmt  go to state 44
    ioStmt          go to state 45


state 100

   29 iterationStmt: WHILE LPAREN boolExpression RPAREN @1 statement .

    $default  reduce using rule 29 (iterationStmt)


state 101

   31 assignmentStmt: ID LSQUARE additiveExpression RSQUARE ASSIGNMENT additiveExpression .

    $default  reduce using rule 31 (assignmentStmt)


state 102

   27 selectionStmt: IF LPAREN boolExpression RPAREN statement ELSE statement .

    $default  reduce using rule 27 (selectionStmt)
